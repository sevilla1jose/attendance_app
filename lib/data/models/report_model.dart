import 'package:attendance_app/domain/entities/report.dart';

/// Modelo para la entidad Reporte en la capa de datos
class ReportModel extends Report {
  /// Constructor del modelo
  const ReportModel({
    required String id,
    required String name,
    required String description,
    required ReportType type,
    required DateTime startDate,
    required DateTime endDate,
    String? userId,
    String? locationId,
    List<String>? userIds,
    required ReportFormat format,
    required String filePath,
    required int fileSize,
    bool isAutoGenerated = false,
    required DateTime createdAt,
  }) : super(
          id: id,
          name: name,
          description: description,
          type: type,
          startDate: startDate,
          endDate: endDate,
          userId: userId,
          locationId: locationId,
          userIds: userIds,
          format: format,
          filePath: filePath,
          fileSize: fileSize,
          isAutoGenerated: isAutoGenerated,
          createdAt: createdAt,
        );

  /// Crea una copia del modelo con algunos campos modificados
  ReportModel copyWith({
    String? id,
    String? name,
    String? description,
    ReportType? type,
    DateTime? startDate,
    DateTime? endDate,
    String? userId,
    String? locationId,
    List<String>? userIds,
    ReportFormat? format,
    String? filePath,
    int? fileSize,
    bool? isAutoGenerated,
    DateTime? createdAt,
  }) {
    return ReportModel(
      id: id ?? this.id,
      name: name ?? this.name,
      description: description ?? this.description,
      type: type ?? this.type,
      startDate: startDate ?? this.startDate,
      endDate: endDate ?? this.endDate,
      userId: userId ?? this.userId,
      locationId: locationId ?? this.locationId,
      userIds: userIds ?? this.userIds,
      format: format ?? this.format,
      filePath: filePath ?? this.filePath,
      fileSize: fileSize ?? this.fileSize,
      isAutoGenerated: isAutoGenerated ?? this.isAutoGenerated,
      createdAt: createdAt ?? this.createdAt,
    );
  }

  /// Crea un modelo a partir de un mapa de datos JSON
  factory ReportModel.fromJson(Map<String, dynamic> json) {
    List<String>? userIds;
    if (json['user_ids'] != null) {
      userIds = List<String>.from(json['user_ids'].split(','));
    }

    return ReportModel(
      id: json['id'],
      name: json['name'],
      description: json['description'],
      type: ReportTypeExtension.fromString(json['type']),
      startDate: DateTime.parse(json['start_date']),
      endDate: DateTime.parse(json['end_date']),
      userId: json['user_id'],
      locationId: json['location_id'],
      userIds: userIds,
      format: ReportFormatExtension.fromString(json['format']),
      filePath: json['file_path'],
      fileSize: json['file_size'],
      isAutoGenerated: json['is_auto_generated'] == 1,
      createdAt: DateTime.parse(json['created_at']),
    );
  }

  /// Convierte el modelo a un mapa de datos JSON
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'name': name,
      'description': description,
      'type': type.value,
      'start_date': startDate.toIso8601String(),
      'end_date': endDate.toIso8601String(),
      'user_id': userId,
      'location_id': locationId,
      'user_ids': userIds?.join(','),
      'format': format.value,
      'file_path': filePath,
      'file_size': fileSize,
      'is_auto_generated': isAutoGenerated ? 1 : 0,
      'created_at': createdAt.toIso8601String(),
    };
  }

  /// Crea un modelo a partir de un mapa de datos de Supabase
  factory ReportModel.fromSupabase(Map<String, dynamic> json) {
    List<String>? userIds;
    if (json['user_ids'] != null) {
      if (json['user_ids'] is List) {
        userIds = List<String>.from(json['user_ids']);
      } else if (json['user_ids'] is String) {
        userIds = List<String>.from(json['user_ids'].split(','));
      }
    }

    return ReportModel(
      id: json['id'],
      name: json['name'],
      description: json['description'],
      type: ReportTypeExtension.fromString(json['type']),
      startDate: DateTime.parse(json['start_date']),
      endDate: DateTime.parse(json['end_date']),
      userId: json['user_id'],
      locationId: json['location_id'],
      userIds: userIds,
      format: ReportFormatExtension.fromString(json['format']),
      filePath: json['file_path'],
      fileSize: json['file_size'],
      isAutoGenerated: json['is_auto_generated'] ?? false,
      createdAt: DateTime.parse(json['created_at']),
    );
  }

  /// Convierte el modelo a un mapa de datos para Supabase
  Map<String, dynamic> toSupabase() {
    return {
      'id': id,
      'name': name,
      'description': description,
      'type': type.value,
      'start_date': startDate.toIso8601String(),
      'end_date': endDate.toIso8601String(),
      'user_id': userId,
      'location_id': locationId,
      'user_ids': userIds,
      'format': format.value,
      'file_path': filePath,
      'file_size': fileSize,
      'is_auto_generated': isAutoGenerated,
      'created_at': createdAt.toIso8601String(),
    };
  }
}
